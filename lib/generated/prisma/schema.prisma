// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id           String           @id @default(uuid())
  name         String
  isGroup      Boolean          @default(false)
  createdAt    DateTime         @default(now())
  messages     Message[]
  participants ChatPaticipant[]
}

model ChatPaticipant {
  id       String   @id @default(uuid())
  userId   String
  chatId   String
  user     User     @relation(fields: [userId], references: [id])
  chat     Chat     @relation(fields: [chatId], references: [id])
  joinedAt DateTime @default(now())
}

model User {
  id         String           @id @default(uuid())
  email      String           @unique
  password   String
  name       String
  surname    String
  message    Message[]
  chats      ChatPaticipant[]
  avatarUrl  String?
  isOnline   Boolean          @default(false)
  lastScreen DateTime?
}

model Message {
  id          Int       @id @default(autoincrement())
  messageId   String    @unique
  text        String
  createdAt   DateTime  @default(now())
  updateId    DateTime?
  userId      String
  chatId      String?
  user        User      @relation(fields: [userId], references: [id])
  chat        Chat?     @relation(fields: [chatId], references: [id])
  isRead      Boolean   @default(false)
  attachments Json?
  deliveredAt DateTime?
  readAt      DateTime?
}
